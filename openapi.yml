---
openapi: 3.0.2
info:
  title: Todo
  version: 1.0.0
  description: My Todo list API
  contact:
    url: "https://github.com/redhat-appdev-practice"
    email: deven.phillips@redhat.com
  license:
    name: Apache 2.0
    url: "https://www.apache.org/licenses/LICENSE-2.0"
servers:
  - url: "http://{domain}:{port}{base_path}"
    description: "Todo API URL"
    variables:
      base_path:
        enum:
          - /
          - /api/v1
        default: /
      domain:
        enum:
          - localhost
          - todo
          - todo.example.com
        default: localhost
      port:
        enum:
          - '443'
          - '80'
          - '8080'
          - '7080'
        default: '7080'
tags:
  - name: todos
paths:
  /todos:
    get:
      description: Get all todos
      operationId: getAllTodos
      tags:
        - todos
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      description: 'Add new Todo'
      operationId: addNewTodo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTodo'
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  /todo/{id}:
    parameters:
      - in: path
        name: id
        required: true
        schema:
          type: string
          format: uuid
    get:
      operationId: getTodoById
      tags:
        - todos
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
    delete:
      operationId: deleteTodoById
      tags:
        - todos
      responses:
        '204':
          description: 'No content'
    put:
      operationId: updateTodoById
      tags:
        - todos
      responses:
        '200':
          description: 'OK'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
  /health:
    get:
      operationId: getHealth
      responses:
        '200':
          description: 'OK'
          content:
            text/plain:
              schema:
                type: string

components:
  schemas:
    NewTodo:
      type: object
      title: NewTodo
      discriminator:
        propertyName: id
      properties:
        title:
          type: string
          maxLength: 255
        description:
          type: string
    Todo:
      type: object
      title: Todo
      discriminator:
        propertyName: id
      x-java-class-annotations:
        - '@javax.persistence.Entity'
        - '@javax.persistence.Table(name = "todos")'
      required:
        - id
      allOf:
        - $ref: '#/components/schemas/NewTodo'
        - type: object
          properties:
            id:
              x-java-field-annotations:
                - '@javax.persistence.Id'
                - '@javax.persistence.GeneratedValue(generator = "UUID")'
                - '@org.hibernate.annotations.GenericGenerator(name = "UUID", strategy = "org.hibernate.id.UUIDGenerator")'
                - '@javax.persistence.Column(name = "id", updatable = false, nullable = false)'
              type: string
              format: uuid
            created:
              type: string
              format: date-time
